node {
    def app
    def web

    stage('Clone repository') {
      
        checkout scm
    }

    stage('Building Docker Image for Backend Application') {
    app = docker.build("martold/itmo:app", "./kanban-app")

    }

    stage('Push Backend Application image') {
        
        docker.withRegistry('https://registry.hub.docker.com', 'dockerhub') {
            app.push("app_${env.BUILD_NUMBER}")
        }
    }

    stage('Building Docker Image for Angular WebUI') {
    web = docker.build("martold/itmo:webui", "./kanban-ui")
 
    }

    stage('Push Backend Application image') {
        
        docker.withRegistry('https://registry.hub.docker.com', 'dockerhub') {
            web.push("web_${env.BUILD_NUMBER}")
        }
    }

    // stage('Build image') {
  
    //    app = docker.build("raj80dockerid/test")
    // }

    // stage('Building Docker Image') {
        
    // # Creating and running the first one
    // dir ('/kanban-app/') {
    //   sh 'docker build --<docker-options> -t martold/itmo:app .'
    // }

    // # Creating and running the first one
    // dir ('/kanban-webui/') {
    //   sh 'docker build --<docker-options> -t martold/itmo:webui .'    }
    // }

    // stage('Test images') {

    //     app.inside {
    //         sh 'echo "Tests passed"'
    //     }
    // }
    
    stage('Trigger updateDeployments') {
                echo "triggering updateDeployments"
                build job: 'updateDeployments', parameters: [string(name: 'DOCKERTAGAPP', value: env.BUILD_NUMBER),string(name: 'DOCKERTAGWEBUI', value: env.BUILD_NUMBER)]
        }
}
